---
- name: Fact install zsh
  ansible.builtin.set_fact:
    root_install_zsh: "{{ 'zsh' in root_shell }}"
  tags:
    - root

- name: Install zsh package
  when:
    - root_install_zsh
  ansible.builtin.package:
    name: zsh
    state: present
  tags:
    - root

- name: Install required packages
  loop:
    - acl
    - bash
    - git
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  tags:
    - root

- name: Update root password
  when:
    - false if root_password is none else (root_password | length > 0)
  ansible.builtin.user:
    name: root
    password: "{{ root_password }}"
    update_password: always
  tags:
    - root

- name: Enforce root shell
  when:
    - false if root_shell is none else (root_shell | length > 0)
  ansible.builtin.user:
    name: root
    shell: "{{ root_shell }}"
  tags:
    - root

- name: Install ohmyzsh repo
  when:
    - root_ohmyzsh
  diff: false
  ansible.builtin.git:
    repo: https://github.com/ohmyzsh/ohmyzsh.git
    dest: /root/.oh-my-zsh
    version: "{{ 'HEAD' if root_ohmyzsh_version == 'latest' else root_ohmyzsh_version }}"
  tags:
    - root

- name: Install bashit repo
  when:
    - root_bashit
  diff: false
  ansible.builtin.git:
    repo: https://github.com/Bash-it/bash-it.git
    dest: /root/.bash_it
    version: "{{ 'HEAD' if root_bashit_version == 'latest' else root_bashit_version }}"
  tags:
    - root

- name: Clone homeshick base
  diff: false
  ansible.builtin.git:
    repo: https://github.com/andsens/homeshick.git
    dest: /root/.homesick/repos/homeshick
    version: "{{ 'HEAD' if root_homeshick_version == 'latest' else root_homeshick_version }}"
  tags:
    - root

- name: Clone homeshick castles
  loop: "{{ root_castles }}"
  loop_control:
    label: "{{ item.name | default(item) }}"
  when:
    - root_castles | length > 0
  diff: false
  ansible.builtin.git:
    repo: "{{ item.name | default(item) if (item.name | default(item)).startswith('http') else 'https://github.com/' + item.name | default(item) }}"
    dest: "/root/.homesick/repos/{{ (item.name | default(item)) | basename }}"
    force: "{{ item.force | default(root_castles_force) }}"
    version: "{{ item.1.version | default('HEAD') }}"
  tags:
    - root

- name: Link homeshick castles
  loop: "{{ root_castles }}"
  loop_control:
    label: "{{ item.name | default(item) }}"
  when:
    - root_castles | length > 0
  ansible.builtin.command: "/root/.homesick/repos/homeshick/bin/homeshick -f -b -q link {{ item | basename }}"
  changed_when: false
  tags:
    - root

- name: Write authorized keys
  when:
    - root_sshkeys | length > 0
  ansible.posix.authorized_key:
    user: root
    key: "{{ root_sshkeys | join('\n') }}"
    path: /root/.ssh/authorized_keys
    exclusive: true
    state: present
  tags:
    - root

- name: Write custom zshenv
  when:
    - root_install_zsh
    - root_override_zshenv
  ansible.builtin.template:
    src: zshenv.j2
    dest: /etc/zsh/zshenv
    owner: root
    group: root
    mode: u=rw,g=r,o=r
  tags:
    - root

...
